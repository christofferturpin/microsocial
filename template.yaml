AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.13
    Timeout: 10
    MemorySize: 128
    Environment:
      Variables:
        PAGES_TABLE: !Ref PagesTable

Resources:

  PagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Pages
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      Tags:
        - Key: Project
          Value: MicroSocial

  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "microsocial-site-${AWS::AccountId}"
      WebsiteConfiguration:
        IndexDocument: index.html
      Tags:
        - Key: Project
          Value: MicroSocial

  PostPageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: post_page/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PagesTable
        - S3CrudPolicy:
            BucketName: !Sub "microsocial-site-${AWS::AccountId}"
        - Statement:
            - Effect: Allow
              Action: cloudfront:CreateInvalidation
              Resource: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/E2IPL84OKE5F39
      Events:
        EditPagePost:
          Type: HttpApi
          Properties:
            Path: /edit
            Method: POST
            ApiId: !Ref MyApi
            Auth:
              Authorizer: MicroSocialJWTAuthorizer
        EditPageOptions:
          Type: HttpApi
          Properties:
            Path: /edit
            Method: OPTIONS
            ApiId: !Ref MyApi

  GetMyPageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_my_page/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PagesTable
      Events:
        ViewOwnPage:
          Type: HttpApi
          Properties:
            Path: /me
            Method: GET
            ApiId: !Ref MyApi
            Auth:
              Authorizer: MicroSocialJWTAuthorizer
        ViewOwnPageOptions:
          Type: HttpApi
          Properties:
            Path: /me
            Method: OPTIONS
            ApiId: !Ref MyApi


  GetRandomPagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_random_pages/
      Handler: app.lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          SITE_BUCKET: !Ref SiteBucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SiteBucket
      Events:
        GetRandomPages:
          Type: HttpApi
          Properties:
            Path: /random
            Method: GET
            ApiId: !Ref MyApi

  MyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: MicrosocialApi
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - 'https://microsocial.link'
          - 'https://www.microsocial.link'
        AllowHeaders:
          - 'Content-Type'
          - 'Authorization'
      Auth:
        Authorizers:
          MicroSocialJWTAuthorizer:
            JwtConfiguration:
              Issuer: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_ZYOUDayBZ"
              Audience:
                - "2mmm9c445j7q675u4ufur7099n"
            IdentitySource: "$request.header.Authorization"
