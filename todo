⏭ What’s Next (Tomorrow and Beyond)
 1. Set up ACM certificate

    Use AWS Certificate Manager (in us-east-1)

    Validate domain via DNS (if using Route 53, it’s easy)

    Needed for HTTPS via CloudFront

 2. Update API Gateway CORS

    Replace '*' with https://your-custom-domain

    Redeploy SAM template to apply changes

    Test again via frontend

 3. Finish Cognito Integration

    Update callback & signout URLs in Cognito

    Set up hosted UI login on frontend

    Extract access token from URL after login

    Pass Authorization: Bearer <token> to API Gateway

    Secure routes (/edit, /me) with Cognito authorizer

    Modify Lambda to extract sub from token as user ID

 4. Optional Enhancements

    Set up Route 53 to route your custom domain to CloudFront

    Clean up bucket policies to rely only on OAC

    (Later) Add email verification or username reservation


    ==== DAY 2 ===

    ✅ What We Accomplished Today
 Backend / Lambda

    Switched from using DynamoDB-only GET /u/{username} endpoint to generating static HTML pages in S3 for each user after they post.

    Updated the POST /edit Lambda to:

        Save content to DynamoDB.

        Write an HTML file to S3 under u/{username}.html.

        Invalidate that page in CloudFront to make updates appear immediately.

    Fixed CORS to allow only https://microsocial.link and https://www.microsocial.link.

    Adjusted the POST /edit Lambda's IAM role (pending final CloudFront permission via custom policy).
Deployment / Infrastructure

    Patched and redeployed the SAM stack, cleaning up extra Lambda resources.

    Removed the now-useless GET /u/{username} DynamoDB-backed function.

    Confirmed the new Lambda is running and CloudFront invalidation logic is properly triggered (though permissions need finalizing).

Frontend

    Verified user login/logout and token handling are working.

    Simplified frontend routing since public pages are now hosted statically.

    Confirmed /me editor view works, /u/{username} loads the generated HTML directly from CloudFront+S3.

 Todo List for Tomorrow
Styling & UX

    Polish the visual styling for public /u/{username} pages (fonts, padding, contrast).

    Improve layout of the /me editor view.

 Feature: Discoverability

    Add a section on the home page to show 3 random user pages (requires listing known usernames—possible DynamoDB scan or a new table?).

 Security Hardening

    Replace "*" CORS in fallback with a secure default (already started).

    Ensure IAM policy for cloudfront:CreateInvalidation is added to Lambda role.

    Double-check that API Gateway is rejecting unauthorized access to /edit and /me.

 Stretch Goals / Maybe Later

    Let users pick a page color or theme.

    Add a public-facing “newest” or “recently updated” section.